// Generated by CoffeeScript 2.7.0
var a, add, b, cells, currCell, dataset, div, echo, formatScore, goto, i, inverse, players, root, style, t, tabindex, table, tables, td, tr, w, width, wrap,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; },
  indexOf = [].indexOf;

echo = console.log;

cells = [];

currCell = null;

players = [];

//##############
wrap = function(type, attrs, ...b) {
  var child, elem, j, k, key, len, len1;
  // b = b.join ""
  elem = document.createElement(type);
// echo 'elem', typeof elem
  for (j = 0, len = b.length; j < len; j++) {
    child = b[j];
    echo(typeof child);
    if (typeof child === 'object') {
      echo('Node', child);
      elem.appendChild(child);
    } else {
      echo('text', child);
      elem.textContent = child;
    }
  }
  for (k = 0, len1 = attrs.length; k < len1; k++) {
    key = attrs[k];
    elem.setAttribute(key, attrs[key]);
  }
  return elem;
};

// "<#{type} #{JSON.stringify(attr)}>#{b}</#{type}>"
table = function(attr, ...b) {
  return wrap('table', attr, ...b);
};

tr = function(attr, ...b) {
  return wrap('tr', attr, ...b);
};

td = function(attr, ...b) {
  return wrap('td', attr, ...b);
};

a = function(attr, ...b) {
  return wrap('a', attr, ...b);
};

div = function(attr, ...b) {
  return wrap('div', attr, ...b);
};

//#############
add = function(elo, name) {
  var id;
  id = players.length;
  return players.push({id, name, elo});
};

add(1825, "JOHANSSON Lennart");

add(1697, "BJÖRKDAHL Göran");

add(1684, "SILINS Peteris");

add(1681, "STOLOV Leonid");

add(1644, "PETTERSSON Lars-Åke");

add(1583, "PERSSON Kjell");

add(1598, "AIKIO Onni");

add(1598, "ISRAEL Dan");

add(1561, "LILJESTRÖM Tor");

add(1559, "LEHVONEN Jouko");

add(1539, "ANDERSSON Lars Owe");

add(1535, "ÅBERG Lars-Erik");

add(1532, "ANTONSSON Görgen");

add(1400, "STRÖMBÄCK Henrik");

tables = [[1, 0], [3, 2], [5, 4], [7, 6], [9, 8], [11, 10], [13, 12]];

formatScore = function() {
  if (currCell) {
    return currCell.dataset.white.padEnd(2) + ' - ' + currCell.dataset.black.padStart(2);
  } else {
    return "-";
  }
};

root = document.getElementById("table-body");

style = {
  textAlign: 'center'
};

tabindex = 0;

width = "90px";

dataset = {
  white: "",
  black: ""
};

t = table({}, (function() {
  var j, ref, results;
  results = [];
  for (i = j = 0, ref = tables.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {
    [w, b] = tables[i];
    results.push(tr({}, td({
      style: {
        textAlign: "center"
      }
    // nr = document.createElement "td"
    // nr.style.textAlign = "center"
    // nr.textContent = i+1
    // row.appendChild nr
    }, i + 1), td({
      dataset: {
        value: w
      }
    // white = document.createElement "td"
    // white.textContent = players[w].name
    // white.dataset.value = w
    // row.appendChild white
    // score = document.createElement "td"
    // score.style.textAlign = "center"
    // score.setAttribute "tabindex", "0"
    // score.setAttribute "width", "90px"
    // score.dataset.white = ""
    // score.dataset.black = ""
    // score.textContent = formatScore()
    // row.appendChild score
    }, players[w].name), td({style, tabindex, width, dataset}, formatScore()), td({
      dataset: {
        value: b
      }
    // black = document.createElement "td"
    // black.textContent = players[b].name
    // black.dataset.value = b
    // row.appendChild black
    }, players[b].name), td({
      style: {
        textAlign: 'right'
      },
      dataset: {
        value: b
      }
    }, players[w].elo - players[b].elo)));
  }
  return results;
})());

// diff = document.createElement "td"
// diff.style.textAlign = "right"
// diff.textContent = players[w].elo - players[b].elo
// row.appendChild diff

// tableBody.appendChild row
echo(root.appendChild(t));

// for i in [0...tables.length]
// 	[w,b] = tables[i]
// 	row = document.createElement "tr"

// 	nr = document.createElement "td"
// 	nr.style.textAlign = "center"
// 	nr.textContent = i+1
// 	row.appendChild nr

// 	white = document.createElement "td"
// 	white.textContent = players[w].name
// 	white.dataset.value = w
// 	row.appendChild white

// 	score = document.createElement "td"
// 	score.style.textAlign = "center"
// 	score.setAttribute "tabindex", "0"
// 	score.setAttribute "width", "90px"
// 	score.dataset.white = ""
// 	score.dataset.black = ""
// 	score.textContent = formatScore()
// 	row.appendChild score

// 	black = document.createElement "td"
// 	black.textContent = players[b].name
// 	black.dataset.value = b
// 	row.appendChild black

// 	diff = document.createElement "td"
// 	diff.style.textAlign = "right"
// 	diff.textContent = players[w].elo - players[b].elo
// 	row.appendChild diff

// 	tableBody.appendChild row
cells = document.querySelectorAll("[tabindex]");

goto = function(index) {
  currCell = cells[modulo(index, cells.length)];
  return currCell.focus();
};

inverse = function(key) {
  return {
    '0': '1',
    '½': '½',
    '1': '0'
  }[key];
};

cells.forEach((cell, index) => {
  cell.addEventListener("focus", () => {
    cell.style.backgroundColor = 'yellow';
    return currCell = cell;
  });
  cell.addEventListener("blur", () => {
    return cell.style.backgroundColor = "white";
  });
  return cell.addEventListener("keydown", (event) => {
    var key, n;
    if (event.key === '0') {
      key = '0';
    }
    if (event.key === '1') {
      key = '1';
    }
    if (event.key === 'r') {
      key = '½';
    }
    if (event.key === ' ') {
      key = '½';
    }
    if (indexOf.call('0½1', key) >= 0) {
      n = currCell.dataset.white.length;
      if (n === 0 || n === 2) {
        currCell.dataset.white = key;
        currCell.dataset.black = inverse(key);
        currCell.textContent = formatScore(); // n==1
      } else {
        currCell.dataset.white += key;
        currCell.dataset.black += inverse(key);
        currCell.textContent = formatScore();
        goto(index + 1);
      }
    }
    if (event.key === "Delete") {
      currCell.dataset.white = "";
      currCell.dataset.black = "";
      currCell.textContent = '-';
      goto(index + 1);
    }
    if (event.key === "Home") {
      goto(0);
    }
    if (event.key === "End") {
      goto(cells.length - 1);
    }
    if (event.key === "ArrowDown") {
      goto(index + 1);
    }
    if (event.key === "ArrowUp") {
      return goto(index - 1);
    }
  });
});

goto(0);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\FairPair2\coffee\lab.coffee