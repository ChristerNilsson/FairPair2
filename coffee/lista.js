// Generated by CoffeeScript 2.7.0
var indexOf = [].indexOf;

import {
  g,
  print,
  range,
  scalex,
  scaley
} from './globals.js';

export var Lista = class Lista {
  constructor(objects = [], columnTitles = "", buttons = {}, drawFunction = null) { // a list of players. Or a list of pairs of players
    this.objects = objects;
    this.columnTitles = columnTitles;
    this.buttons = buttons;
    this.drawFunction = drawFunction;
    this.N = this.objects.length;
    this.paintYellowRow = true;
    this.errors = []; // list with index of erroneous rows
    this.currentRow = 0;
    this.offset = 0;
    this.adjustOffset(0);
  }

  draw() { // ritar de rader som syns i fönstret enbart
    var i, iRow, j, len, p, ref, results, s, w;
    s = this.columnTitles;
    fill('white');
    textAlign(LEFT);
    text(s, 10, scaley(4));
    fill('black');
    ref = range(g.LPP);
    // i inom fönstret
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      iRow = this.offset + i; // index till listan
      if (iRow >= this.N) {
        continue;
      }
      p = this.objects[iRow];
      s = this.drawFunction(p, i, iRow);
      if (iRow === this.currentRow) {
        fill('yellow');
        w = this.paintYellowRow ? width : scaley(23.4);
        rect(0, scaley(i + 4.5), w, scaley(1));
        fill('black');
      }
      fill(indexOf.call(this.errors, iRow) >= 0 ? 'red' : 'black');
      results.push(text(s, 10, scaley(i + 5)));
    }
    return results;
  }

  keyPressed(event, key) {
    return this.buttons[key].click();
  }

  mouseWheel(event) {
    return this.adjustOffset(event.delta < 0 ? -1 : 1);
  }

  mousePressed() {
    var button, key, ref, results;
    if (mouseY < scaley(4)) {
      ref = this.buttons;
      results = [];
      for (key in ref) {
        button = ref[key];
        if (button.active && button.inside(mouseX, mouseY)) {
          results.push(button.click());
        } else {
          results.push(void 0);
        }
      }
      return results;
    } else {
      return this.adjustOffset(round(mouseY / g.ZOOM[g.state] - 5 - this.currentRow + this.offset));
    }
  }

  adjustOffset(delta) {
    var ref;
    if ((0 <= (ref = this.currentRow + delta) && ref < this.N)) {
      this.currentRow += delta;
    }
    if (this.currentRow < this.offset) {
      return this.offset = this.currentRow;
    } else {
      if (this.currentRow >= this.offset + g.LPP) {
        return this.offset = this.currentRow - g.LPP + 1;
      }
    }
  }

  ArrowUp() {
    if (this.currentRow > 0) {
      return this.adjustOffset(-1);
    }
  }

  ArrowDown() {
    if (this.currentRow < this.N - 1) {
      return this.adjustOffset(+1);
    }
  }

  PageUp() {
    if (this.currentRow > 0) {
      return this.adjustOffset(Math.max(this.currentRow - g.LPP, 0) - this.currentRow);
    }
  }

  PageDown() {
    if (this.currentRow < this.N - 1) {
      return this.adjustOffset(Math.min(this.currentRow + g.LPP, this.N - 1) - this.currentRow);
    }
  }

  Home() {
    return this.adjustOffset(0 - this.currentRow);
  }

  End() {
    return this.adjustOffset(this.N - 1 - this.currentRow);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGEuanMiLCJzb3VyY2VSb290IjoiLi5cXCIsInNvdXJjZXMiOlsiY29mZmVlXFxsaXN0YS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUE7O0FBQUEsT0FBQTtFQUFTLENBQVQ7RUFBVyxLQUFYO0VBQWlCLEtBQWpCO0VBQXVCLE1BQXZCO0VBQThCLE1BQTlCO0NBQUEsTUFBQTs7QUFFQSxPQUFBLElBQWEsUUFBTixNQUFBLE1BQUE7RUFDTixXQUFjLFdBQVUsRUFBVixpQkFBNEIsRUFBNUIsWUFBeUMsQ0FBQSxDQUF6QyxpQkFBMkQsSUFBM0QsQ0FBQSxFQUFBO0lBQUMsSUFBQyxDQUFBO0lBQVksSUFBQyxDQUFBO0lBQWlCLElBQUMsQ0FBQTtJQUFZLElBQUMsQ0FBQTtJQUMzRCxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxPQUFPLENBQUM7SUFDZCxJQUFDLENBQUEsY0FBRCxHQUFrQjtJQUNsQixJQUFDLENBQUEsTUFBRCxHQUFVLEdBRlo7SUFHRSxJQUFDLENBQUEsVUFBRCxHQUFjO0lBQ2QsSUFBQyxDQUFBLE1BQUQsR0FBVTtJQUNWLElBQUMsQ0FBQSxZQUFELENBQWMsQ0FBZDtFQU5hOztFQVFkLElBQU8sQ0FBQSxDQUFBLEVBQUE7QUFDUixRQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE7SUFBRSxDQUFBLEdBQUksSUFBQyxDQUFBO0lBQ0wsSUFBQSxDQUFLLE9BQUw7SUFDQSxTQUFBLENBQVcsSUFBWDtJQUNBLElBQUEsQ0FBSyxDQUFMLEVBQU8sRUFBUCxFQUFVLE1BQUEsQ0FBTyxDQUFQLENBQVY7SUFFQSxJQUFBLENBQUssT0FBTDtBQUNBOztBQUFBO0lBQUEsS0FBQSxxQ0FBQTs7TUFDQyxJQUFBLEdBQU8sSUFBQyxDQUFBLE1BQUQsR0FBVSxFQUFwQjtNQUNHLElBQUcsSUFBQSxJQUFRLElBQUMsQ0FBQSxDQUFaO0FBQW1CLGlCQUFuQjs7TUFDQSxDQUFBLEdBQUksSUFBQyxDQUFBLE9BQU8sQ0FBQyxJQUFEO01BQ1osQ0FBQSxHQUFJLElBQUMsQ0FBQSxZQUFELENBQWMsQ0FBZCxFQUFpQixDQUFqQixFQUFvQixJQUFwQjtNQUNKLElBQUcsSUFBQSxLQUFRLElBQUMsQ0FBQSxVQUFaO1FBQ0MsSUFBQSxDQUFLLFFBQUw7UUFDQSxDQUFBLEdBQU8sSUFBQyxDQUFBLGNBQUosR0FBd0IsS0FBeEIsR0FBbUMsTUFBQSxDQUFPLElBQVA7UUFDdkMsSUFBQSxDQUFLLENBQUwsRUFBUSxNQUFBLENBQU8sQ0FBQSxHQUFJLEdBQVgsQ0FBUixFQUF5QixDQUF6QixFQUE0QixNQUFBLENBQU8sQ0FBUCxDQUE1QjtRQUNBLElBQUEsQ0FBSyxPQUFMLEVBSkQ7O01BS0EsSUFBQSxjQUFnQixJQUFDLENBQUEsUUFBVCxVQUFILEdBQXdCLEtBQXhCLEdBQW1DLE9BQXhDO21CQUNBLElBQUEsQ0FBSyxDQUFMLEVBQU8sRUFBUCxFQUFXLE1BQUEsQ0FBTyxDQUFBLEdBQUksQ0FBWCxDQUFYO0lBWEQsQ0FBQTs7RUFQTTs7RUFvQlAsVUFBYSxDQUFDLEtBQUQsRUFBUSxHQUFSLENBQUE7V0FBZ0IsSUFBQyxDQUFBLE9BQU8sQ0FBQyxHQUFELENBQUssQ0FBQyxLQUFkLENBQUE7RUFBaEI7O0VBQ2IsVUFBYSxDQUFDLEtBQUQsQ0FBQTtXQUFXLElBQUMsQ0FBQSxZQUFELENBQWlCLEtBQUssQ0FBQyxLQUFOLEdBQWMsQ0FBakIsR0FBd0IsQ0FBQyxDQUF6QixHQUFnQyxDQUE5QztFQUFYOztFQUNiLFlBQWUsQ0FBQSxDQUFBO0FBQ2hCLFFBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7SUFBRSxJQUFHLE1BQUEsR0FBUyxNQUFBLENBQU8sQ0FBUCxDQUFaO0FBQ0M7QUFBQTtNQUFBLEtBQUEsVUFBQTs7UUFDQyxJQUFHLE1BQU0sQ0FBQyxNQUFQLElBQWtCLE1BQU0sQ0FBQyxNQUFQLENBQWMsTUFBZCxFQUFxQixNQUFyQixDQUFyQjt1QkFBc0QsTUFBTSxDQUFDLEtBQVAsQ0FBQSxHQUF0RDtTQUFBLE1BQUE7K0JBQUE7O01BREQsQ0FBQTtxQkFERDtLQUFBLE1BQUE7YUFJQyxJQUFDLENBQUEsWUFBRCxDQUFjLEtBQUEsQ0FBTSxNQUFBLEdBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSCxDQUFmLEdBQTJCLENBQTNCLEdBQStCLElBQUMsQ0FBQSxVQUFoQyxHQUE2QyxJQUFDLENBQUEsTUFBcEQsQ0FBZCxFQUpEOztFQURjOztFQU9mLFlBQWUsQ0FBQyxLQUFELENBQUE7QUFDaEIsUUFBQTtJQUFFLElBQUcsQ0FBQSxDQUFBLFdBQUssSUFBQyxDQUFBLFVBQUQsR0FBYyxNQUFuQixPQUFBLEdBQTJCLElBQUMsQ0FBQSxDQUE1QixDQUFIO01BQXNDLElBQUMsQ0FBQSxVQUFELElBQWUsTUFBckQ7O0lBQ0EsSUFBRyxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxNQUFsQjthQUE4QixJQUFDLENBQUEsTUFBRCxHQUFVLElBQUMsQ0FBQSxXQUF6QztLQUFBLE1BQUE7TUFFQyxJQUFHLElBQUMsQ0FBQSxVQUFELElBQWUsSUFBQyxDQUFBLE1BQUQsR0FBVSxDQUFDLENBQUMsR0FBOUI7ZUFBdUMsSUFBQyxDQUFBLE1BQUQsR0FBVSxJQUFDLENBQUEsVUFBRCxHQUFjLENBQUMsQ0FBQyxHQUFoQixHQUFzQixFQUF2RTtPQUZEOztFQUZjOztFQU1mLE9BQVksQ0FBQSxDQUFBO0lBQUcsSUFBRyxJQUFDLENBQUEsVUFBRCxHQUFjLENBQWpCO2FBQTZCLElBQUMsQ0FBQSxZQUFELENBQWMsQ0FBQyxDQUFmLEVBQTdCOztFQUFIOztFQUNaLFNBQVksQ0FBQSxDQUFBO0lBQUcsSUFBRyxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBdEI7YUFBNkIsSUFBQyxDQUFBLFlBQUQsQ0FBYyxDQUFDLENBQWYsRUFBN0I7O0VBQUg7O0VBQ1osTUFBWSxDQUFBLENBQUE7SUFBRyxJQUFHLElBQUMsQ0FBQSxVQUFELEdBQWMsQ0FBakI7YUFBNkIsSUFBQyxDQUFBLFlBQUQsQ0FBYyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUMsQ0FBQSxVQUFELEdBQWMsQ0FBQyxDQUFDLEdBQXpCLEVBQThCLENBQTlCLENBQUEsR0FBbUMsSUFBQyxDQUFBLFVBQWxELEVBQTdCOztFQUFIOztFQUNaLFFBQVksQ0FBQSxDQUFBO0lBQUcsSUFBRyxJQUFDLENBQUEsVUFBRCxHQUFjLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBdEI7YUFBNkIsSUFBQyxDQUFBLFlBQUQsQ0FBYyxJQUFJLENBQUMsR0FBTCxDQUFTLElBQUMsQ0FBQSxVQUFELEdBQWMsQ0FBQyxDQUFDLEdBQXpCLEVBQThCLElBQUMsQ0FBQSxDQUFELEdBQUssQ0FBbkMsQ0FBQSxHQUF3QyxJQUFDLENBQUEsVUFBdkQsRUFBN0I7O0VBQUg7O0VBQ1osSUFBWSxDQUFBLENBQUE7V0FBRyxJQUFDLENBQUEsWUFBRCxDQUFjLENBQUEsR0FBSSxJQUFDLENBQUEsVUFBbkI7RUFBSDs7RUFDWixHQUFZLENBQUEsQ0FBQTtXQUFHLElBQUMsQ0FBQSxZQUFELENBQWMsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFILEdBQU8sSUFBQyxDQUFBLFVBQXRCO0VBQUg7O0FBakROIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZyxwcmludCxyYW5nZSxzY2FsZXgsc2NhbGV5IH0gZnJvbSAnLi9nbG9iYWxzLmpzJyBcclxuXHJcbmV4cG9ydCBjbGFzcyBMaXN0YVxyXG5cdGNvbnN0cnVjdG9yIDogKEBvYmplY3RzPVtdLCBAY29sdW1uVGl0bGVzPVwiXCIsIEBidXR0b25zPXt9LCBAZHJhd0Z1bmN0aW9uPW51bGwpIC0+ICMgYSBsaXN0IG9mIHBsYXllcnMuIE9yIGEgbGlzdCBvZiBwYWlycyBvZiBwbGF5ZXJzXHJcblx0XHRATiA9IEBvYmplY3RzLmxlbmd0aFxyXG5cdFx0QHBhaW50WWVsbG93Um93ID0gdHJ1ZVxyXG5cdFx0QGVycm9ycyA9IFtdICMgbGlzdCB3aXRoIGluZGV4IG9mIGVycm9uZW91cyByb3dzXHJcblx0XHRAY3VycmVudFJvdyA9IDBcclxuXHRcdEBvZmZzZXQgPSAwXHJcblx0XHRAYWRqdXN0T2Zmc2V0IDBcclxuXHJcblx0ZHJhdyA6IC0+ICMgcml0YXIgZGUgcmFkZXIgc29tIHN5bnMgaSBmw7Zuc3RyZXQgZW5iYXJ0XHJcblx0XHRzID0gQGNvbHVtblRpdGxlc1xyXG5cdFx0ZmlsbCAnd2hpdGUnXHJcblx0XHR0ZXh0QWxpZ24gIExFRlRcclxuXHRcdHRleHQgcywxMCxzY2FsZXkoNClcclxuXHJcblx0XHRmaWxsICdibGFjaydcclxuXHRcdGZvciBpIGluIHJhbmdlIGcuTFBQICMgaSBpbm9tIGbDtm5zdHJldFxyXG5cdFx0XHRpUm93ID0gQG9mZnNldCArIGkgIyBpbmRleCB0aWxsIGxpc3RhblxyXG5cdFx0XHRpZiBpUm93ID49IEBOIHRoZW4gY29udGludWVcclxuXHRcdFx0cCA9IEBvYmplY3RzW2lSb3ddXHJcblx0XHRcdHMgPSBAZHJhd0Z1bmN0aW9uIHAsIGksIGlSb3dcclxuXHRcdFx0aWYgaVJvdyA9PSBAY3VycmVudFJvd1xyXG5cdFx0XHRcdGZpbGwgJ3llbGxvdydcclxuXHRcdFx0XHR3ID0gaWYgQHBhaW50WWVsbG93Um93IHRoZW4gd2lkdGggZWxzZSBzY2FsZXkoMjMuNClcclxuXHRcdFx0XHRyZWN0IDAsIHNjYWxleShpICsgNC41KSwgdywgc2NhbGV5KDEpXHJcblx0XHRcdFx0ZmlsbCAnYmxhY2snXHJcblx0XHRcdGZpbGwgaWYgaVJvdyBpbiBAZXJyb3JzIHRoZW4gJ3JlZCcgZWxzZSAnYmxhY2snXHJcblx0XHRcdHRleHQgcywxMCwgc2NhbGV5KGkgKyA1KVxyXG5cclxuXHRrZXlQcmVzc2VkIDogKGV2ZW50LCBrZXkpIC0+IEBidXR0b25zW2tleV0uY2xpY2soKVxyXG5cdG1vdXNlV2hlZWwgOiAoZXZlbnQpIC0+IEBhZGp1c3RPZmZzZXQgaWYgZXZlbnQuZGVsdGEgPCAwIHRoZW4gLTEgZWxzZSAxXHJcblx0bW91c2VQcmVzc2VkIDogLT4gXHJcblx0XHRpZiBtb3VzZVkgPCBzY2FsZXkoNClcclxuXHRcdFx0Zm9yIGtleSxidXR0b24gb2YgQGJ1dHRvbnNcclxuXHRcdFx0XHRpZiBidXR0b24uYWN0aXZlIGFuZCBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVkgdGhlbiBidXR0b24uY2xpY2soKVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRAYWRqdXN0T2Zmc2V0IHJvdW5kIG1vdXNlWSAvIGcuWk9PTVtnLnN0YXRlXSAtIDUgLSBAY3VycmVudFJvdyArIEBvZmZzZXRcclxuXHJcblx0YWRqdXN0T2Zmc2V0IDogKGRlbHRhKSAtPlxyXG5cdFx0aWYgMCA8PSBAY3VycmVudFJvdyArIGRlbHRhIDwgQE4gdGhlbiBAY3VycmVudFJvdyArPSBkZWx0YVxyXG5cdFx0aWYgQGN1cnJlbnRSb3cgPCBAb2Zmc2V0IHRoZW4gQG9mZnNldCA9IEBjdXJyZW50Um93XHJcblx0XHRlbHNlIFxyXG5cdFx0XHRpZiBAY3VycmVudFJvdyA+PSBAb2Zmc2V0ICsgZy5MUFAgdGhlbiBAb2Zmc2V0ID0gQGN1cnJlbnRSb3cgLSBnLkxQUCArIDFcclxuXHJcblx0QXJyb3dVcCAgIDogLT4gaWYgQGN1cnJlbnRSb3cgPiAwICAgICAgdGhlbiBAYWRqdXN0T2Zmc2V0IC0xXHJcblx0QXJyb3dEb3duIDogLT4gaWYgQGN1cnJlbnRSb3cgPCBATiAtIDEgdGhlbiBAYWRqdXN0T2Zmc2V0ICsxXHJcblx0UGFnZVVwICAgIDogLT4gaWYgQGN1cnJlbnRSb3cgPiAwICAgICAgdGhlbiBAYWRqdXN0T2Zmc2V0KE1hdGgubWF4KEBjdXJyZW50Um93IC0gZy5MUFAsIDApIC0gQGN1cnJlbnRSb3cgKVxyXG5cdFBhZ2VEb3duICA6IC0+IGlmIEBjdXJyZW50Um93IDwgQE4gLSAxIHRoZW4gQGFkanVzdE9mZnNldChNYXRoLm1pbihAY3VycmVudFJvdyArIGcuTFBQLCBATiAtIDEpIC0gQGN1cnJlbnRSb3cpXHJcblx0SG9tZSAgICAgIDogLT4gQGFkanVzdE9mZnNldCAwIC0gQGN1cnJlbnRSb3dcclxuXHRFbmQgICAgICAgOiAtPiBAYWRqdXN0T2Zmc2V0IEBOLTEgLSBAY3VycmVudFJvd1xyXG4iXX0=
//# sourceURL=c:\github\ELO-Pairings\coffee\lista.coffee